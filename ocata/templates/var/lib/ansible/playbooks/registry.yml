mkdir -p /var/lib/os-apply-config/templates/var/lib/ansible/playbooks
cat << 'EOF' > /var/lib/os-apply-config/templates/var/lib/ansible/playbooks/registry.yml
---
{{=<% %>=}}
- hosts: localhost
  sudo: yes
  tasks:
  - name: Create temp directory for volume definitions
    command: mktemp -d /tmp/registry-volume-XXXXXXX
    register: mktemp
    changed_when: False

  - name: Check if Openstack clients are installed
    command: rpm -q python-novaclient python-cinderclient python-keystoneclient
    register: rpm_check
    ignore_errors: true

  - name: Setup RDO repositories
    yum: name=https://rdoproject.org/repos/rdo-release.rpm state=present
    when: (ansible_first_run | default(false) | bool) and deployment_type == 'origin' and rpm_check.rc != 0 and ansible_distribution != 'RedHat'

  - name: Install Nova and Cinder clients
    yum: name=python-novaclient,python-cinderclient,python-keystoneclient state=latest

  - name: Attach the volume to the VM
    shell: nova --os-auth-url {{ openshift_cloudprovider_openstack_auth_url }} --os-username {{ openshift_cloudprovider_openstack_username }} --os-password {{ openshift_cloudprovider_openstack_password }} --os-tenant-name {{ openshift_cloudprovider_openstack_tenant_name }} volume-attach {{ bastion_instance_id }} {{ openshift_hosted_registry_storage_openstack_volumeID }}

  - name: Wait for the device to appear
    wait_for: path=/dev/vdc

  - name: Format the device
    filesystem: fstype={{ openshift_hosted_registry_storage_openstack_filesystem }} dev=/dev/vdc

  - name: Mount the device
    mount: name={{ mktemp.stdout }} src=/dev/vdc state=mounted fstype={{ openshift_hosted_registry_storage_openstack_filesystem }}

  - name: Change mode on the filesystem
    file: path={{ mktemp.stdout }} state=directory recurse=true mode=0777

  - name: Unmount the device
    mount: name={{ mktemp.stdout }} src=/dev/vdc state=absent fstype={{ openshift_hosted_registry_storage_openstack_filesystem }}

  - name: Delete temp directory
    file:
      name: "{{ mktemp.stdout }}"
      state: absent
    changed_when: False

  - name: Detach the volume to the VM
    shell: nova --os-auth-url {{ openshift_cloudprovider_openstack_auth_url }} --os-username {{ openshift_cloudprovider_openstack_username }} --os-password {{ openshift_cloudprovider_openstack_password }} --os-tenant-name {{ openshift_cloudprovider_openstack_tenant_name }} volume-detach {{ bastion_instance_id }} {{ openshift_hosted_registry_storage_openstack_volumeID }}
<%={{ }}=%>
EOF
